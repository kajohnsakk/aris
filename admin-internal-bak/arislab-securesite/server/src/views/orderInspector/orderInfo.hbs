<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Order Inspector</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
	<link rel="stylesheet" href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css">
    <style>
        body {
            background-color: #ecf0f1;
        }

        @media (min-width: 576px) {
            .modal-dialog {
                max-width: none;
            }
        }

        .modal-dialog {
            width: 68%;
            height: 92%;
            padding: 0;
        }

        .modal-content {
            height: 69%;
        }
    </style>
</head>

<body>
    <div class="container-fluid">
        <div class="card">
            <div class="card-body">
                <h1 class="mb-4 text-2xl font-extrabold">Order Inspector</h1>
				
				<div class="flex flex-col">
					<div class="flex flex-row flex-1">
						<div class="flex flex-col w-1/3 px-2 divide-y divide-gray-400">
							<div class="flex-row py-2">
								<div class="flex flex-row items-center">
									<div class="flex w-40 mr-2 font-extrabold">Order Doc ID:</div>
									<div class="flex"><input type="text" readonly id="order-doc-id"></div>
								</div>
								<div class="flex flex-row items-center">
									<div class="flex w-40 mr-2 font-extrabold">Order ID:</div>
									<div class="flex"><input type="text" readonly id="order-id"></div>
								</div>
								<div class="flex flex-row items-center">
									<div class="flex w-40 mr-2 font-extrabold">Database Status:</div>
									<div class="flex {{#if isOrderSuccess}}text-blue-600{{else}}text-orange-600{{/if}}"><input class="font-extrabold" type="text" readonly id="order-status"></div>
								</div>
								<div class="flex flex-row items-center">
									<div class="flex w-40 mr-2 font-extrabold">Method:</div>
									<div class="flex"><input type="text" readonly id="method"></div>
								</div>
							</div>
							{{#unless isOrderSuccess}}
							<div class="flex-row p-2">
								<div class="flex flex-row mb-2">
									<div class="text-orange-600 mr-2 font-extrabold">*</div>
									<div class="flex flex-col">
										<div>กรุณาตรวจสอบการชำระเงินจากข้อมูลของ GB Pay (ในช่องด้านขวา)</div>
										<div>หากพบว่าลูกค้า<u>ชำระเงินเรียบร้อย</u>แล้ว ให้เลือกรูปแบบการชำระเงินแล้วกดปุ่มข้างล่าง เพื่อทำการปรับสถานะของรายการสั่งซื้อให้เป็น <b class="text-blue-600">SUCCESS</b></div>
									</div>
								</div>
								<div class="border border-gray-400 bg-white rounded p-2 flex flex-col">
									<div class="flex flex-row mb-4"><u>ปรับสถานะรายการสั่งซื้อเป็น SUCCESS</u></div>
									<div class="flex flex-row">
										<div class="flex flex-col flex-1">
											<div class="flex flex-row items-center mb-2">
												<div class="flex w-32">เลือกวิธีชำระเงิน:</div>
												<div class="flex flex-1">
													<div class="relative">
														<select id="selected-payment-method" class="block appearance-none w-full border border-gray-200 text-gray-700 py-1 px-2 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500">
															<option value="QR_CODE">QR Code</option>
															<option value="CREDIT_CARD">Credit Card</option>
														</select>
														<div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
															<svg class="fill-current h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"/></svg>
														</div>
													</div>
												</div>
											</div>
											
											<div class="flex flex-row items-center mb-2">
												<div class="flex w-32">จำนวนเงิน*:</div>
												<div class="flex flex-1">
													<input id="amount" type="text" value="{{ updateOrderData.amount }}" class="appearance-none block w-1/2 text-gray-700 border border-gray-200 rounded py-1 px-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500">
												</div>
											</div>
											
											<div class="flex flex-row items-center mb-2">
												<div class="flex w-32">หมายเลขบัตรเครดิต:</div>
												<div class="flex flex-1">
													<input id="card-no" type="text" class="appearance-none block w-1/2 text-gray-700 border border-gray-200 rounded py-1 px-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500">
												</div>
											</div>
											
											<div class="flex flex-row items-center mb-2">
												<div class="flex w-32">GBP ref no*:</div>
												<div class="flex flex-1">
													<input id="details" type="text" value="{{ updateOrderData.gbpRefNo }}" class="appearance-none block w-1/2 text-gray-700 border border-gray-200 rounded py-1 px-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500">
												</div>
											</div>
											
											<div class="flex flex-row items-center mb-2">
												<div class="flex w-32">ชื่อผู้ชำระ:</div>
												<div class="flex flex-1">
													<input id="customer-name" type="text" value="{{ updateOrderData.customerName }}" class="appearance-none block w-1/2 text-gray-700 border border-gray-200 rounded py-1 px-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500">
												</div>
											</div>
											
											<div class="flex flex-row items-center mb-2">
												<div class="flex w-32">Email:</div>
												<div class="flex flex-1">
													<input id="customer-email" type="email" value="{{ updateOrderData.customerEmail }}" class="appearance-none block w-1/2 text-gray-700 border border-gray-200 rounded py-1 px-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500">
												</div>
											</div>
											
											<div class="flex flex-row items-center mb-2">
												<div class="flex w-32">เบอร์โทร:</div>
												<div class="flex flex-1">
													<input id="customer-telephone" type="text" class="appearance-none block w-1/2 text-gray-700 border border-gray-200 rounded py-1 px-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500">
												</div>
											</div>
											
											<div class="flex flex-row items-center mb-2">
												<div class="flex w-32">ที่อยู่:</div>
												<div class="flex flex-1">
													<input id="customer-address" type="text" class="appearance-none block w-full text-gray-700 border border-gray-200 rounded py-1 px-2 leading-tight focus:outline-none focus:bg-white focus:border-gray-500">
												</div>
											</div>
											
											<div class="flex flex-row">
												<div class="flex w-full justify-end">
													<button type="button" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-4 rounded-full" id="save-btn">Save</button>
													<img id="spinner" class="ml-4 w-8 hidden" src="https://www.ims-expertservices.com/wp-content/plugins/unyson/framework/extensions/forms/static/img/ajax-loader.gif" />
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
							{{/unless}}
						</div>
						
						<div class="flex flex-col w-1/3 px-2">
							<div class="flex flex-row flex-1 mb-2">
								<div class="flex w-full font-extrabold">Order Info:</div>
							</div>
							<div class="flex flex-row flex-1">
								<textarea rows="20" readonly class="w-full border p-2">{{ orderInfo }}</textarea>
							</div>
						</div>
						
						<div class="flex flex-col w-1/3 px-2">
							<div class="flex flex-row flex-1 mb-2">
								<div class="flex w-full font-extrabold">GB Pay:</div>
							</div>
							<div class="flex flex-row flex-1">
								<textarea rows="20" readonly class="w-full border p-2">{{ gbRespnoseInfo }}</textarea>
							</div>
						</div>
						<!--
						<div class="flex w-auto mr-2">Order ID:</div>
						<div class="flex w-40 mr-2"><input id="order-id" type="text" class="appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-2 px-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500"></div>
						<div class="flex">
							<button type="button" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-4 rounded-full" id="search-btn">ค้นหา</button>
							<img id="spinner" class="ml-4 w-8 hidden" src="https://www.ims-expertservices.com/wp-content/plugins/unyson/framework/extensions/forms/static/img/ajax-loader.gif" />
						</div>
						-->
					</div>
				</div>
            </div>
        </div>
    </div>
</body>

<script type="text/javascript" src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.0/axios.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script type="text/javascript" src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

<script>
	const HOST = window.location.origin;
	const orderInfo = {{{orderInfo}}};
	const storeID = orderInfo.storeID;
	const orderID = orderInfo.orderID;
	const orderDocID = orderInfo.orderDocID;
	
	$('#order-doc-id').val(orderDocID);
	$('#order-id').val(orderInfo.orderID);
	$('#order-status').val(orderInfo.paymentInfo.status);
	if( orderInfo.paymentInfo.method === "QR_CODE" || orderInfo.paymentInfo.method === "CREDIT_CARD" ) {
		$('#selected-payment-method').val(orderInfo.paymentInfo.method);
	}
	$('#details').val(orderInfo.paymentInfo.details);
	$('#customer-name').val(orderInfo.paymentInfo.gbPaymentDetails.customerName);
	$('#customer-email').val(orderInfo.paymentInfo.gbPaymentDetails.customerEmail);
	$('#customer-telephone').val(orderInfo.paymentInfo.gbPaymentDetails.customerTelephone);
	$('#customer-address').val(orderInfo.paymentInfo.gbPaymentDetails.customerAddress);
	
	//console.log('orderInfo ==> ', orderInfo);
	
	
	$('#save-btn').on('click', async (e) => {
		e.preventDefault();
		
		var patt = /[0-9]+\.?[0-9]?/g;
		if( $("#amount").val().length === 0 || !patt.test($("#amount").val()) ) {
			$("#amount").val('')
			displayAlert("กรุณาใส่จำนวนเงิน");
			return false;
		}
		
		$('#save-btn').hide();
		$('#spinner').show();

		const updateOrderTime = Date.now();
		const updateOrderURL = `${HOST}/api/order/orderDocID/${orderDocID}/update`;
		const getFundsTransactionURL = `${HOST}/api/fundsTransaction/orderID/${orderID}`;
		const insertFundsTransactionURL = `${HOST}/api/fundsTransaction/new`;
		const calculateServiceFeeURL = `https://manage.arislab.ai/calculateServiceFee`;
		//const refreshURL = `${HOST}/orderInspector/orderDocID/${orderDocID}`;
		const updateData = {
			"paymentInfo": {
				"status": "SUCCESS",
				"method": $('#selected-payment-method').val(),
				"details": $('#details').val(),
				"isFromBatchCheck": true,
				"batchCheckTimestamp": updateOrderTime,
				"paymentCompletedOn": updateOrderTime,
				"gbPaymentDetails": {
					"customerName": $('#customer-name').val(),
					"customerEmail": $('#customer-email').val(),
					"customerAddress": $('#customer-telephone').val(),
					"customerTelephone": $('#customer-address').val(),
				}
			}
		};
		
		const updateOrderStatusReponse = await axios.post(updateOrderURL, updateData, { headers: { 'content-type': 'application/json' } });
		
		if( updateOrderStatusReponse['status'] === 200 ) {
			const responseOrderStatusData = updateOrderStatusReponse['data'];
			if( responseOrderStatusData['resultCode'] === "00" ) {
			
				const getFundsTransactionReponse = await axios.get(getFundsTransactionURL);
				if( getFundsTransactionReponse['status'] === 200 ) {
					const fundsTransactionList = getFundsTransactionReponse['data'];
					if( fundsTransactionList.length === 0 ) {
						const amount = ( $("#amount").val().length > 0 ) ? parseFloat( $("#amount").val() ) : 0 ;
						const cardNo = $("#card-no").val();
						
						const calculateServiceFeeData = {
							"nuser": "arislab-prod",
							"storeID": storeID,
							"paymentInfo": {
								"amount": amount,
								"cardNo": cardNo
							}
						};
						const calculateServiceFeeResponse = await axios.post(calculateServiceFeeURL, calculateServiceFeeData, { headers: { 'content-type': 'application/json' } });
						if( calculateServiceFeeResponse['status'] === 200 ) {
							const calculateServiceFeeData = calculateServiceFeeResponse['data'];
							const fundsTransactionData = {
								"fundTransactionID": "",
								"storeID": storeID,
								"amount": calculateServiceFeeData['amount'],
								"actualAmount": calculateServiceFeeData['totalAmount'],
								"fee": calculateServiceFeeData['fee'],
								"feeList": calculateServiceFeeData['feeList'],
								"type": "DEPOSIT",
								"orderInfo": {
									"orderID": orderID,
									"customerName": $('#customer-name').val()
								},
								"withdrawInfo": {
									"status": "",
									"statusCode": "",
									"referenceNo": ""
								},
								"createdAt": updateOrderTime,
								"isDeleted": false,
								"deletedAt": 0
							};
							
							
							const insertFundsTransactionResponse = await axios.post(insertFundsTransactionURL, fundsTransactionData, { headers: { 'content-type': 'application/json' } });
							if( insertFundsTransactionResponse['status'] === 200 ) {
								setTimeout(() => {
									location.reload();
								}, 1500);
							}
						}
						
					} else {
						setTimeout(() => {
							location.reload();
						}, 1500);
					}
				} else {
					displayAlert("Error: ไม่สามารถค้นหา FundsTransaction ได้");
				}
				const fundsTransactionList = getFundsTransactionReponse['data'];
				orderID
			} else {
				displayAlert("Error: ไม่สามารถอัพเดตสถานะของรายการสั่งซื้อได้ กรุณาติดต่อผู้ดูแลระบบ");
			}
		}
		

	});
	
	function displayAlert(errorMessage) {
		alert(errorMessage);
		$('#save-btn').show();
		$('#spinner').hide();
	}
	/*
	const HOST = window.location.origin;
	
	$('#search-btn').on('click', () => {
		$('#search-btn').hide();
		$('#spinner').show();
		$('#result').hide();
		$('#result-data').html('');
		
		const orderID = $('#order-id').val();
		if( orderID.length > 0 ) {
			const getOrderUrl = `${HOST}/api/order/orderID/${orderID}`;
			
			axios.get(getOrderUrl, { headers: { 'content-type': 'application/json' } }).then((response) => {
				//console.log('Result is ', response.data);
				const orderList = response.data;
				
				if( orderList.length > 0 ) {
					let displayTable;
					displayTable = '<div class="mb-3 text-lg">ผลการค้นหา</div>';
					displayTable+= '<table class="table">';
					
					displayTable+= '<tr>';
					displayTable+= '<th>#</th>';
					displayTable+= '<th>Page</th>';
					displayTable+= '<th>ผู้สั่งซื้อ</th>';
					displayTable+= '<th>วันที่ทำการสั่งซื้อ</th>';
					displayTable+= '<th>วันที่ทำการชำระเงิน</th>';
					displayTable+= '<th>สถานะรายการสั่งซื้อ</th>';
					displayTable+= '<th>Action</th>';
					displayTable+= '</tr>';
					
					for(let i=0; i<orderList.length; i++) {
						const orderInfo = orderList[i];
						const isSuccess = orderInfo['paymentInfo']['status'] === "SUCCESS" ? true : false ;
						const detailUrl = `${HOST}/orderInspector/orderDocID/${orderInfo['orderDocID']}`;
						const facebookPage = ( orderInfo.hasOwnProperty('channel') && orderInfo['channel'].hasOwnProperty('name') ) ? orderInfo['channel']['name'] : 'N/A' ;
						
						displayTable+= '<tr>';
						displayTable+= '<td>'+(i+1)+'</td>';
						displayTable+= '<td>'+orderInfo['channel']['name']+'</td>';
						displayTable+= '<td>'+( orderInfo['userInfo']['firstName'] + ' ' + orderInfo['userInfo']['lastName'] )+'</td>';
						displayTable+= '<td>'+convertToDate(orderInfo['orderDate'])+'</td>';
						displayTable+= '<td>'+( isSuccess ? convertToDate(orderInfo['paymentInfo']['paymentCompletedOn']) : 'N/A' )+'</td>';
						displayTable+= '<td class="font-bold '+( isSuccess ? 'text-blue-600' : 'text-red-600' )+'">'+orderInfo['paymentInfo']['status']+'</td>';
						displayTable+= '<td><a class="underline" href="'+detailUrl+'">>> ดูรายละเอียด <<</a></td>';
						displayTable+= '</tr>';
					}
					
					displayTable+= '</table>';
					
					$('#result-data').html(displayTable);
				} else {
					$('#result-data').html('<div class="text-danger">ไม่พบข้อมูลรายการสั่งซื้อ: '+orderID+'</div>');
				}
				
				$('#result').show();
				$('#search-btn').show();
				$('#spinner').hide();
				
            });
		} else {
			alert('กรุณาใส่ order id ก่อน');
		}
	});
	
	function convertToDate(timestamp) {
		return moment(timestamp).format('HH:mm')+' น.<br />'+moment(timestamp).format('DD/MM/YYYY');
	}
	*/
</script>

</html>