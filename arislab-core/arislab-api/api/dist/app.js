var express = require("express");
var app = express();
var cookieParser = require("cookie-parser");
var bodyParser = require("body-parser");
var compression = require("compression");
var busboy = require("connect-busboy");
var fs = require("fs");
var path = require("path");
var log = require("./utils/log");
var BusinessProfileRouter = require("./routes/BusinessProfileRouter");
var PaymentRouter = require("./routes/PaymentRouter");
var GBPayRouter = require("./routes/GBPayRouter");
var PolicyRouter = require("./routes/PolicyRouter");
var DeliveryRouter = require("./routes/DeliveryRouter");
var StoreConfigRouter = require("./routes/StoreConfigRouter");
var ProductRouter = require("./routes/ProductRouter");
var OrderRouter = require("./routes/OrderRouter");
var FileRouter = require("./routes/FileRouter");
var UtilityRouter = require("./routes/UtilityRouter");
var ChannelRouter = require("./routes/ChannelRouter");
var EventRouter = require("./routes/EventRouter");
var ChatbotRouter = require("./routes/ChatbotRouter");
var ReportingRouter = require("./routes/ReportingRouter");
var EmailRouter = require("./routes/EmailRouter");
var SmsRouter = require("./routes/SmsRouter");
var OtpRouter = require("./routes/OtpRouter");
var BankRecordRouter = require("./routes/BankRecordRouter");
var FundsTransactionRouter = require("./routes/FundsTransactionRouter");
var CartRouter = require("./routes/CartRouter");
var CustomerRouter = require("./routes/CustomerRouter");
var ProductBookingRouter = require("./routes/ProductBookingRouter");
var GBPayAccountRouter = require("./routes/GBPayAccountRouter");
var EventTransactionRouter = require("./routes/EventTransactionRouter");
var StorePackageRouter = require("./routes/StorePackageRouter");
var CreditCardRouter = require("./routes/CreditCardRouter");
var RecurringRouter = require("./routes/RecurringRouter");
var RecurringTransactionRouter = require("./routes/RecurringTransactionRouter");
var InvoiceRouter = require("./routes/InvoiceRouter");
var ReserveProductRouter = require("./routes/ReserveProductRouter");
var VoteCustomerRouter = require("./routes/VoteCustomerRouter");
app.use(compression());
app.use(bodyParser.json({ limit: "500mb" }));
app.use(bodyParser.urlencoded({ extended: false, limit: "500mb" }));
app.use(busboy());
app.use(cookieParser());
app.use(function (req, res, next) {
    res.header("Access-Control-Allow-Origin", "*");
    res.header("Access-Control-Allow-Methods", "GET, POST, OPTIONS, PUT, PATCH, DELETE");
    res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept, Cache-Control");
    next();
});
app.use("/api/businessProfile", BusinessProfileRouter);
app.use("/api/payment", PaymentRouter);
app.use("/api/gbpay", GBPayRouter);
app.use("/api/policy", PolicyRouter);
app.use("/api/delivery", DeliveryRouter);
app.use("/api/storeConfig", StoreConfigRouter);
app.use("/api/product", ProductRouter);
app.use("/api/order", OrderRouter);
app.use("/api/utility", UtilityRouter);
app.use("/api/channels", ChannelRouter);
app.use("/api/event", EventRouter);
app.use("/api/chatbot", ChatbotRouter);
app.use("/api/reports", ReportingRouter);
app.use("/api/email", EmailRouter);
app.use("/api/sms", SmsRouter);
app.use("/api/otp", OtpRouter);
app.use("/api/bankRecord", BankRecordRouter);
app.use("/api/fundsTransaction", FundsTransactionRouter);
app.use("/api/cart", CartRouter);
app.use("/api/customer", CustomerRouter);
app.use("/api/productBooking", ProductBookingRouter);
app.use("/api/gbpayAccount", GBPayAccountRouter);
app.use("/api/eventTransaction", EventTransactionRouter);
app.use("/api/storePackage", StorePackageRouter);
app.use("/api/creditCard", CreditCardRouter);
app.use("/api/recurring", RecurringRouter);
app.use("/api/recurringTransaction", RecurringTransactionRouter);
app.use("/api/invoice", InvoiceRouter);
app.use("/api/reserveProduct", ReserveProductRouter);
app.use("/api/votecustomer", VoteCustomerRouter);
app.use("/api/files", FileRouter);
var server = app.listen(process.env.API_PORT || 1780, function () {
    var host = server.address().address;
    var port = server.address().port;
    log.debug("Listening at http://%s:%s", host, port);
});
