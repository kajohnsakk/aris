apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: aris-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
    - host: beta.arislab.ai
      http:
        paths:
          - path: /site(/|$)(.*)
            backend:
              serviceName: securesite
              servicePort: 1380
          - path: /webhook(/|$)(.*)
            backend:
              serviceName: webhook
              servicePort: 3111
          - path: /live(/|$)(.*)
            backend:
              serviceName: media
              servicePort: 8000
          - path: /
            backend:
              serviceName: rvp
              servicePort: 80
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dahsboard
  namespace: kubernetes-dashboard
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  rules:
    - host: dashboard-alpha.arislab.ai
      http:
        paths:
        - backend:
            serviceName: kubernetes-dashboard
            servicePort: 443
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: aris-ingress
  namespace: kong
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
    - host: kong-admin-api.arislab.ai
      http:
        paths:
          - backend:
              serviceName: kong-svc
              servicePort: 8001
    - host: kong-admin.arislab.ai
      http:
        paths:
          - backend:
              serviceName: konga-svc
              servicePort: 1337
    - host: api.arislab.ai
      http:
        paths:
          - backend:
              serviceName: kong-svc
              servicePort: 8000
