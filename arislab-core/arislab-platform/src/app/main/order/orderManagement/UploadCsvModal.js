import React, { Component } from "react";
import { withStyles } from "@material-ui/core/styles";
import { Trans, withTranslation } from "react-i18next";
import i18n from "../../../i18n";
import axios from "axios";
import { Dialog, IconButton } from "@material-ui/core";
import CheckCircleIcon from "@material-ui/icons/CheckCircle";
import UtilityFunction from "../../../main/modules/UtilityFunction";
import CloseIcon from "@material-ui/icons/Close";
import LinearProgress from "@material-ui/core/LinearProgress";

import CSVReader from "react-csv-reader";
import styles from "../styles/styles";

class UploadCsvModal extends Component {
  state = {
    loading: {
      completedTask: 0,
      task: 0,
      percent: 0,
    },
    isUploaded: false,
  };

  handleUpload = async (data, fileInfo) => {
    var loading = {
      ...this.state.loading,
      task: data.length,
    };
    this.setState({ isUploaded: true, loading: loading });

    for (let el of data) {
      if (el.hasOwnProperty("isTrackingSent")) {
        if (el.isTrackingSent === "No") {
          await axios
            .post("/api/order/send/tracking", el)
            .then((res) => {
              if (res.status === 200) {
                loading.completedTask++;
                loading.percent = (loading.completedTask / loading.task) * 100;
                this.setState({ loading: loading });
              } else {
                this.setState({
                  error: `${res.data} ${i18n.t("orders.send-tracking-error")}`,
                });
              }
            })
            .catch((error) => console.log(error));
        } else {
          loading.completedTask++;
          loading.percent = (loading.completedTask / loading.task) * 100;
          this.setState({ loading: loading });
        }
      }

      if (this.state.error) {
        return;
      }
    }
  };

  renderUploadSection = () => {
    const { loading, isUploaded, error } = this.state;
    const papaparseOptions = {
      header: true,
      dynamicTyping: true,
      skipEmptyLines: true,
    };

    if (error) {
      return <div className="flex flex-glow justify-center my-12">{error}</div>;
    } else if (isUploaded) {
      return (
        <div className="order-progress-container">
          <LinearProgress variant="determinate" value={loading.percent} />
          <div className="progress-label">
            <Trans i18nKey="orders.sent">‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß</Trans> {loading.completedTask}{" "}
            / <Trans i18nKey="orders.total">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</Trans> {loading.task}{" "}
            {loading.percent === 100 ? (
              <CheckCircleIcon className="ml-4 text-green" />
            ) : (
              <React.Fragment />
            )}
          </div>
        </div>
      );
    } else {
      return (
        <CSVReader
          cssClass="csv-reader flex flex-col items-center mt-16 justify-center"
          label={i18n.t("orders.select-csv-file")}
          onFileLoaded={this.handleUpload}
          parserOptions={papaparseOptions}
        />
      );
    }
  };

  render() {
    const { classes } = this.props;

    return (
      <Dialog
        fullWidth={this.props.fullWidth}
        fullScreen={UtilityFunction.useMediaQuery("(max-width: 767px)")}
        maxWidth="sm"
        open={this.props.open}
        className={classes.dialog}
      >
        <div className="modal-header">
          <h2>
            <Trans i18nKey="orders.upload-title">
              ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏û‡∏±‡∏™‡∏î‡∏∏
            </Trans>
          </h2>
        </div>

        <div className="absolute right pin-t pin-r">
          <IconButton
            aria-label="Close"
            onClick={() => {
              this.props.toggleDialog(this.props.dialogName);
            }}
          >
            <CloseIcon fontSize="default" />
          </IconButton>
        </div>

        <div className="upload-modal-content flex flex-grow justify-center">
          {this.renderUploadSection()}
          <div className="flex flex-col mt-12">
            <div className="flex-grow">
              {i18n.language === "en" ? (
                <React.Fragment>
                  <h3>
                    <span role="img" aria-label="book">
                      üìô
                    </span>{" "}
                    How to use
                  </h3>
                  <div>
                    1. Download csv file by clicking "Download file" button on
                    order page for using it as a templete to upload
                  </div>
                  <div>2. Edit the file</div>
                  <div>
                    - shippingMethod column is shipping company you use to send
                    product (Edit as format below{" "}
                  </div>
                  <div className="ml-32 mt-4 mb-4">
                    <div> EMS Thaipost - EMS</div>
                    <div> Kerry Express - KERRY</div>
                    <div> J&amp;T Express - J&amp;T</div>
                    <div> Ninja van - NINJA</div>
                    <div> Flash Express - FLASH</div>
                    <div> Alpha fast - ALPHA</div>
                    <div> DHL - DHL</div>
                    <div> BEST Express - BEST</div>
                    <div> SCG Express - SCG</div>
                  </div>
                  <div> )</div>
                  <div>
                    - trackingNumber column is tracking number of your product
                    (Edit)
                  </div>
                  <div>
                    - isTrackingSent column is telling you whether tracking
                    number was sent to your customer or not (Don't edit)
                  </div>
                  <div>
                    3. When you finish editing. Upload the same file you
                    download and wait for the progress to finish.
                  </div>
                </React.Fragment>
              ) : (
                <React.Fragment>
                  <h3>
                    <span role="img" aria-label="book">
                      üìô
                    </span>{" "}
                    ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
                  </h3>
                  <div>
                    1. ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå csv ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå" ‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤
                    "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î
                  </div>
                  <div>2. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå csv ‡πÇ‡∏î‡∏¢‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏ó‡∏£‡∏≤‡∏ö‡∏Ñ‡∏∑‡∏≠</div>
                  <div>
                    - ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå shippingMethod ‡∏Ñ‡∏∑‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏Ç‡∏ô‡∏™‡πà‡∏á (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏≤‡∏° format
                    ‡∏î‡∏±‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ{" "}
                  </div>
                  <div className="ml-32 mt-4 mb-4">
                    <div> ‡∏Å‡∏£‡∏ì‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢ EMS Thaipost ‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô EMS</div>
                    <div> ‡∏Å‡∏£‡∏ì‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢ Kerry Express ‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô KERRY</div>
                    <div>
                      {" "}
                      ‡∏Å‡∏£‡∏ì‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢ J&amp;T Express ‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô J&amp;T
                    </div>
                    <div> ‡∏Å‡∏£‡∏ì‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢ Ninja van ‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô NINJA</div>
                    <div> ‡∏Å‡∏£‡∏ì‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢ Flash Express ‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô FLASH</div>
                    <div> ‡∏Å‡∏£‡∏ì‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢ Alpha fast ‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô ALPHA</div>
                    <div> ‡∏Å‡∏£‡∏ì‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢ DHL ‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô DHL</div>
                    <div> ‡∏Å‡∏£‡∏ì‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢ Best Express ‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô BEST</div>
                    <div> ‡∏Å‡∏£‡∏ì‡∏µ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢ SCG Express ‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏õ‡πá‡∏ô SCG</div>
                  </div>
                  <div> )</div>
                  <div>
                    - ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå trackingNumber ‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏•‡∏Ç‡∏û‡∏±‡∏™‡∏î‡∏∏ (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
                  </div>
                  <div>
                    - ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå isTrackingSent
                    ‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤‡πÄ‡∏•‡∏Ç‡∏û‡∏±‡∏™‡∏î‡∏∏‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
                    (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç)
                  </div>
                  <div>
                    3. ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ô‡∏±‡πâ‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤
                    ‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏à‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à
                  </div>
                </React.Fragment>
              )}
            </div>
            <div className="flex-grow mt-12 mb-16">
              {i18n.language === "en" ? (
                <React.Fragment>
                  <h3>
                    <span role="img" aria-label="notes">
                      üí°
                    </span>{" "}
                    Notes
                  </h3>
                  <div>
                    - System will check before sending tracking number whether
                    it has been sent or not. If it has already been sent, system
                    will not send that tracking number again.
                  </div>
                  <div>
                    - Incomplete uploading progress may be caused by your
                    internet conection or other factors. You can try to reupload
                    the file again without worrying about tracking number will
                    be sent again.
                  </div>
                </React.Fragment>
              ) : (
                <React.Fragment>
                  <h3>
                    <span role="img" aria-label="notes">
                      üí°
                    </span>{" "}
                    ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏
                  </h3>
                  <div>
                    -
                    ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏ß‡πà‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏Ç‡∏û‡∏±‡∏™‡∏î‡∏∏‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
                    ‡∏ñ‡πâ‡∏≤‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏ã‡πâ‡∏≥
                  </div>
                  <div>
                    - ‡∏ñ‡πâ‡∏≤‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                    ‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏≠‡∏¥‡∏ô‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏≠‡∏∑‡πà‡∏ô
                    ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏≠‡∏á‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏ã‡πâ‡∏≥
                  </div>
                </React.Fragment>
              )}
            </div>
          </div>
        </div>
      </Dialog>
    );
  }
}

export default withTranslation()(
  withStyles(styles, { withTheme: true })(UploadCsvModal)
);
