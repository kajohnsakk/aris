<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Store Package Report</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">
    <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css">
    <style>
        body {
            background-color: #ecf0f1;
        }

        @media (min-width: 576px) {
            .modal-dialog {
                max-width: none;
            }
        }

        .modal-dialog {
            width: 68%;
            height: 92%;
            padding: 0;
        }

        .modal-content {
            height: 69%;
        }
    </style>
</head>

<body>
    <div class="container-fluid">
        <div class="card">
            <div class="card-body">
                <h1 class="mb-4 text-2xl font-extrabold">Store Package</h1>
				
				<div class="flex flex-col mb-5">
					<div class="flex flex-row items-center mb-3">
						<div class="flex w-40 font-bold">Store ID:</div>
						<div class="flex flex-row items-center">{{ storeInfo.storeID }}</div>
					</div>
					<div class="flex flex-row items-center mb-3">
						<div class="flex w-40 font-bold">Email:</div>
						<div class="flex flex-row items-center">{{ storeInfo.email }}</div>
					</div>
					<div class="flex flex-row items-center mb-3">
						<div class="flex w-40 font-bold">Business Email:</div>
						<div class="flex flex-row items-center">{{ storeInfo.storeInfo.businessProfile.businessEmail }}</div>
					</div>
					<div class="flex flex-row items-center mb-3">
						<div class="flex w-40 font-bold">Facebook Page:</div>
						<div class="flex flex-row items-center"><b>{{ storeInfo.storeInfo.businessProfile.accountDetails.businessName }}</b></div>
					</div>
                </div>
				
				<div class="flex flex-col md:flex-row mb-3">
					<div class="flex flex-row items-center w-full md:w-1/3 pr-3">
						<div class="font-bold w-40">เลือก Package:</div>
						<select id="selected-package" class="block w-full border border-gray-200 text-gray-700 py-1 px-3 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500">
							{{#each packageList}}
								<option value="{{code}}">
									{{name}}
								</option>
							{{/each}}
						</select>
					</div>
					<div class="flex flex-row items-center w-full md:w-1/3">
						<div class="font-bold w-40">เลือก Status:</div>
						<select id="selected-status" class="block w-full border border-gray-200 text-gray-700 py-1 px-3 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500">
							<option value="ACTIVE">ACTIVE</option>
							<option value="INACTIVE">INACTIVE</option>
						</select>
					</div>
				</div>
				<div class="flex flex-col md:flex-row mb-3">
					<div class="flex flex-row items-center w-full md:w-1/3">
						<div class="font-bold w-20">Start:</div>
						<div class="w-auto"><input id="start-date" class="border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"></div>
					</div>
					<div class="flex flex-row items-center w-full md:w-1/3">
						<div class="font-bold w-20">End:</div>
						<div class="w-auto"><input id="end-date" class="border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"></div>
					</div>
				</div>
				<div class="flex flex-col md:flex-row mb-3">
					<div id="btn-area" class="flex flex-row items-center w-full md:w-1/3">
						<div class="mr-4">
							<button id="save-btn" type="button" class="btn btn-primary" aria-expanded="false">
								Save package
							</button>
						</div>
						<div>
							<button id="back-btn" type="button" class="btn btn-danger" aria-expanded="false">
								Back
							</button>
						</div>
					</div>
					<img id="spinner" class="ml-4 w-8 hidden" src="https://www.ims-expertservices.com/wp-content/plugins/unyson/framework/extensions/forms/static/img/ajax-loader.gif" />
				</div>
				
				

            </div>
        </div>
    </div>
	
</body>

<script type="text/javascript" src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.0/axios.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
<script type="text/javascript" src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.js"></script>

<script type="text/javascript">
	const HOST = window.location.origin;
	const storeID = "{{{storeInfo.storeID}}}";
	var storePackageInfo = JSON.parse('{{{storePackageInfoStr}}}');
	var packageList = JSON.parse('{{{packageListStr}}}');
	
	//console.log('storePackageInfo ==> ', storePackageInfo);
	//console.log(packageList);
	
	let startDate;
	let endDate;
	if( storePackageInfo.hasOwnProperty('storePackageID') ) {
		$('#selected-package').val(storePackageInfo.packageInfo.code);
		$('#selected-status').val(storePackageInfo.status);
		startDate = moment(storePackageInfo.activeDate).format('DD/MM/YYYY');
		endDate = moment(storePackageInfo.expiryDate).format('DD/MM/YYYY');
	} else {
		startDate = moment().format('DD/MM/YYYY');
		endDate = moment().add(30,'days').format('DD/MM/YYYY');
	}


    $('#start-date').datepicker({
        format: 'dd/mm/yyyy',
		startDate: startDate
    }).datepicker('setDate', startDate );

    $('#end-date').datepicker({
        format: 'dd/mm/yyyy',
		startDate: startDate
    }).datepicker('setDate', endDate );
	
	$('#back-btn').on('click', function() {
		const redirectURL = `${HOST}/storePackage/store/${storeID}`;
		window.location.href = redirectURL;
	});

    $('#save-btn').on('click', function() {
		const storePackageID = '{{{storePackageInfo.storePackageID}}}';
		//alert('storePackageID ==> '+ storePackageID);

		$('#btn-area').hide();
		$('#spinner').show();
		
		let newStorePackage = {};
		let selectedPackage = {};
        var selectedPackageCode = $('#selected-package').val();
		var selectedStatus = $('#selected-status').val();
        var startDate = $('#start-date').val() + " 00:00:00";
        var endDate = $('#end-date').val() + " 23:59:59";
        //alert(`${selectedPackage} ==> ${toTimestamp(startDate)} , ${toTimestamp(endDate)}`);
		
		for(let i=0; i<packageList.length; i++) {
			const packageInfo = packageList[i];
			if( packageInfo['code'] === selectedPackageCode ) {
				selectedPackage = packageInfo;
			}
		}
		
		newStorePackage = {
			"storePackageID": storePackageID,
			"storeID": storeID,
			"packageInfo": { ...selectedPackage, "note": "" },
			"status": selectedStatus,
			//"createdAt": Date.now(),
			//"updatedAt": 0,
			"activeDate": toTimestamp(startDate),
			"expiryDate": toTimestamp(endDate)
		};
		
		
        //let reqURL = `${HOST}/api/storePackage/new`;
		let reqURL;
		const redirectURL = `${HOST}/storePackage/store/${storeID}`;
		
		if( storePackageID.length > 0 ) {
			newStorePackage['createdAt'] = Number('{{{storePackageInfo.createdAt}}}');
			newStorePackage['updatedAt'] = Date.now();
			
			//reqURL = 'http://console.cb-beta.arislab.ai:1780/api/storePackage/storePackageID/'+storePackageID+'/update';
			reqURL = `${HOST}/api/storePackage/storePackageID/${storePackageID}/update`;
		} else {
			newStorePackage['createdAt'] = Date.now();
			newStorePackage['updatedAt'] = 0;
			
			//reqURL = 'http://console.cb-beta.arislab.ai:1780/api/storePackage/new';
			reqURL = `${HOST}/api/storePackage/new`;
		}
		//console.log('reqURL ==> ', reqURL);
		//console.log('newStorePackage ==> ', newStorePackage);
		
		axios.post(reqURL, newStorePackage, { headers: { 'content-type': 'application/json' } })
            .then((response) => {
				console.log('Result is ', response.data);
				setTimeout(function(){ window.location.href = redirectURL; }, 1500);
            });
		
		
    });

    function toTimestamp(strDate){
        var strDateTimeList = strDate.split(' ');
        var strDateList = strDateTimeList[0].split('/');
        var newFormat = strDateList[2]+'-'+strDateList[1]+'-'+strDateList[0]+' '+strDateTimeList[1];
        var datum = Date.parse(newFormat);

        return datum;
    }

</script>


</html>